{"version":3,"sources":["HeaderBar/HeaderBar.js","StateManagement/Constants.js","HeaderPage/HeaderPage.js","StateManagement/Actions.js","CountStartPage/CountStartPage.js","ScanPage/ScanPage.js","App.js","serviceWorker.js","StateManagement/Reducer.js","StateManagement/Store.js","index.js"],"names":["HeaderBar","props","state","title","AppBar","position","color","Toolbar","Typography","variant","style","fontWeight","this","Component","ADD_SKU","SCAN_FIXTURE","ConnectedHeaderPage","fixtureId","handleFixtureIdChange","bind","handleSubmit","isButtonDisabled","event","setState","target","value","scanFixture","className","TextField","autoFocus","id","label","margin","onChange","to","textDecoration","Button","disabled","width","fullWidth","onClick","HeaderPage","connect","dispatch","type","ACTION_CONSTANTS","payload","useStyles","makeStyles","theme","createStyles","root","flexGrow","ConnectedCountStartPage","fontSize","marginBottom","textTransform","display","push","CountStartPage","ScanPage","handleSkuIdChange","handleSkuSave","resetState","getSkuTable","currentSku","skuCountList","skuId","skuList","Object","entries","length","Table","TableHead","TableCell","TableBody","map","keys","TableRow","isScanDisabled","App","basename","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","initialState","startTime","rootReducer","action","assign","concat","store","createStore","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.463f120b.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nexport default class HeaderBar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: props.title\n        }\n    }\n\n    render() {\n        return (\n            <AppBar position=\"static\" color=\"secondary\">\n                <Toolbar>\n                    <Typography variant=\"h6\" style = {{fontWeight: \"bold\"}}>\n                        {this.state.title}\n                    </Typography>\n                </Toolbar>\n            </AppBar>);\n    }\n}","export const ADD_SKU = \"ADD_SKU\";\nexport const SCAN_FIXTURE = \"SCAN_FIXTURE\";","import React, { Component } from 'react';\nimport HeaderBar from '../HeaderBar/HeaderBar.js';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { Link } from \"react-router-dom\";\nimport './HeaderPage.css';\nimport { connect } from 'react-redux';\nimport { scanFixture } from '../StateManagement/Actions';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        scanFixture: fixtureId => dispatch(scanFixture(fixtureId))\n    };\n}\n\nclass ConnectedHeaderPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { fixtureId: null };\n        this.handleFixtureIdChange = this.handleFixtureIdChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.isButtonDisabled = this.isButtonDisabled.bind(this);\n    }\n\n    handleFixtureIdChange(event) {\n        this.setState({ fixtureId: event.target.value });\n    }\n\n    handleSubmit(event) {\n        const { fixtureId } = this.state;\n        this.props.scanFixture({ fixtureId });\n        this.setState({ fixtureId: \"\" });\n    }\n\n    isButtonDisabled() {\n        return !this.state.fixtureId;\n    }\n\n    render() {\n        return (\n            <div>\n                <HeaderBar title=\"Inventory Control\" />\n                <div className=\"container\">\n                    <TextField\n                        autoFocus\n                        id=\"outlined-name\"\n                        label=\"Fixture ID\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        onChange={this.handleFixtureIdChange}\n                    />\n                    <Link to=\"/start\" style={{ textDecoration: 'none' }}>\n                        <Button disabled={this.isButtonDisabled()} style={{ width: '100%' }} fullWidth={true} variant=\"contained\" color=\"secondary\" onClick={this.handleSubmit}>\n                            Proceed\n                    </Button>\n                    </Link >\n                </div>\n            </div>\n        );\n    }\n}\nconst HeaderPage = connect(\n    null,\n    mapDispatchToProps\n)(ConnectedHeaderPage);\n\nexport default HeaderPage;","import * as ACTION_CONSTANTS from './Constants';\n\nexport function scanCsku(payload) {\n    return { type: ACTION_CONSTANTS.ADD_SKU, payload };\n}\n\nexport function scanFixture(payload) {\n    return { type: ACTION_CONSTANTS.SCAN_FIXTURE, payload };\n}","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport './CountStartPage.css'\nimport Button from '@material-ui/core/Button'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport HeaderBar from '../HeaderBar/HeaderBar.js'\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1\n        }\n    })\n);\n\nconst mapStateToProps = state => {\n    return { fixtureId: state.fixtureId };\n};\n\nclass ConnectedCountStartPage extends Component {\n    render() {\n        if (!this.props.fixtureId) {\n            return <Redirect push to=\"/\" />;\n        }\n\n        return (<div className={useStyles.root}>\n            <HeaderBar title=\"Inventory Control\" />\n            <Typography variant=\"overline\" style={{ fontSize: 18, margin: 10, marginBottom: 0, textTransform: 'uppercase' }} >Fixture ID:\n            <Typography variant=\"overline\" style={{ fontSize: 18, margin: 10, marginBottom: 0, textDecoration: 'underline' }} >{this.props.fixtureId}</Typography>\n            </Typography>\n            <div style={{ display: 'flex-vertical', flexGrow: 2, margin: 10 }}>\n                <Link to=\"/scan\" style={{ textDecoration: 'none' }}>\n                    <Button style={{ width: '100%', marginBottom: 10 }} variant=\"contained\" color=\"secondary\" >\n                        Start Scanning\n                    </Button>\n                </Link>\n                <Link to=\"/\" style={{ textDecoration: 'none' }}>\n                    <Button style={{ width: '100%' }} variant=\"contained\" color=\"secondary\">\n                        Back to Home\n                    </Button>\n                </Link >\n            </div>\n        </div>);\n    }\n}\n\nconst CountStartPage = connect(mapStateToProps)(ConnectedCountStartPage);\nexport default CountStartPage;","import React, { Component } from 'react';\nimport HeaderBar from '../HeaderBar/HeaderBar.js';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { Link } from \"react-router-dom\";\nimport '../HeaderPage/HeaderPage.css'; import Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\n\nexport default class ScanPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSkuIdChange = this.handleSkuIdChange.bind(this);\n        this.handleSkuSave = this.handleSkuSave.bind(this);\n        this.resetState = this.resetState.bind(this);\n        this.getSkuTable = this.getSkuTable.bind(this);\n        this.state = {\n            currentSku: '',\n            skuCountList: {}\n        }\n    }\n\n    handleSkuIdChange(event) {\n        this.setState({ currentSku: event.target.value });\n    }\n\n    resetState() {\n        this.setState({\n            currentSku: '',\n            skuCountList: {}\n        });\n    }\n\n    handleSkuSave(event) {\n        var skuId = this.state.currentSku;\n        var skuList = this.state.skuCountList;\n        if (this.state.skuCountList[skuId]) {\n            skuList[skuId] = this.state.skuCountList[skuId] + 1;\n        } else if (skuId) {\n            skuList[skuId] = 1;\n        }\n        this.setState({ skuCountList: skuList, currentSku: '' });\n    }\n\n    isScanDisabled() {\n        return !this.state.currentSku;\n    }\n\n    getSkuTable() {\n        if (this.state.skuCountList && Object.entries(this.state.skuCountList).length > 0) {\n            return (<Table>\n                <TableHead>\n                    <TableCell><Typography variant=\"h6\">SKU ID</Typography></TableCell>\n                    <TableCell><Typography variant=\"h6\">Count</Typography></TableCell>\n                </TableHead>\n                <TableBody>\n                    {Object.entries(this.state.skuCountList).map((keys) =>\n                        <TableRow>\n                            <TableCell>{keys[0]}</TableCell>\n                            <TableCell>{keys[1]}</TableCell>\n                        </TableRow>)}\n                </TableBody>\n            </Table>);\n        }\n    }\n    render() {\n        return (\n            <div>\n                <HeaderBar title=\"Inventory Control\" />\n                <div className=\"container\">\n                    <TextField\n                        id=\"outlined-name\"\n                        label=\"CSKU ID\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        autoFocus\n                        value={this.state.currentSku}\n                        onChange={this.handleSkuIdChange}\n                    />\n                    <div style={{ display: 'flex-vertical', flexGrow: 2 }}>\n                        <Button style={{ width: '100%', marginBottom: 10 }} variant=\"contained\" color=\"secondary\" disabled={this.isScanDisabled()} onClick={this.handleSkuSave}>\n                            Scan\n                        </Button>\n                        <Button style={{ width: '100%', marginBottom: 10 }} variant=\"contained\" color=\"secondary\" onClick={this.resetState}>\n                            Start Again\n                        </Button>\n                        <Link to=\"/start\" style={{ textDecoration: 'none' }}>\n                            <Button style={{ width: '100%' }} variant=\"contained\" color=\"secondary\">\n                                Return\n                            </Button>\n                        </Link >\n                    </div>\n                    <div>{this.getSkuTable()}</div>\n                </div>\n            </div >\n        );\n    }\n}","import React from 'react';\nimport HeaderPage from './HeaderPage/HeaderPage.js'\nimport CountStartPage from './CountStartPage/CountStartPage.js'\nimport ScanPage from './ScanPage/ScanPage.js'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router basename=\"/inventory-control\">\n      <div>\n        <Route exact path=\"/\" ><HeaderPage /></Route>\n        <Route exact path=\"/start\"><CountStartPage /></Route>\n        <Route exact path=\"/scan\"><ScanPage /></Route>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as ACTION_CONSTANTS from './Constants'\n\nconst initialState = {\n    fixtureId: null, startTime: null, skuList: []\n};\nfunction rootReducer(state = initialState, action) {\n    if (action.type === ACTION_CONSTANTS.ADD_SKU) {\n        return Object.assign({}, state, {\n            skuList: state.skuList.concat(action.payload).skuId\n          });\n    } else if (action.type === ACTION_CONSTANTS.SCAN_FIXTURE) {\n        return Object.assign({}, state, {\n            fixtureId: action.payload.fixtureId\n          });\n    }\n    return state;\n};\nexport default rootReducer;\n\n\n\n","import { createStore } from \"redux\";\nimport rootReducer from \"./Reducer.js\";\n\nconst store = createStore(rootReducer);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from './StateManagement/Store.js';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}