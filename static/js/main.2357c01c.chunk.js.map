{"version":3,"sources":["Img/delete.svg","serviceWorker.js","CommonComponents/HeaderBar.js","StateManagement/Constants.js","StateManagement/Actions.js","HeaderPage/HeaderPage.js","CountStartPage/CountStartPage.js","ReviewPage/EditableTable.js","ScanPage/ScanPage.js","ControllerInteface/ApiCaller.js","ReviewPage/ReviewPage.js","App.js","LocalStorage.js","StateManagement/Reducer.js","StateManagement/Store.js","index.js"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","HeaderBar","props","title","AppBar","position","color","Toolbar","Typography","variant","style","fontWeight","this","Component","ADD_SKUS","SCAN_FIXTURE","scanSkus","payload","type","ACTION_CONSTANTS","setFixture","ConnectedHeaderPage","handleFixtureIdChange","event","setState","fixtureId","target","value","handleSubmit","isButtonDisabled","className","TextField","autoFocus","id","label","margin","onChange","to","Button","disabled","fullWidth","onClick","HeaderPage","connect","dispatch","ConnectedCountStartPage","width","marginBottom","push","CountStartPage","EditableTable","onCountChange","tuple","valChange","list","Object","assign","skuCountList","setSkuCountList","onRemoveSku","key","setTimeout","selectedKey","onClickDelete","Swal","fire","text","icon","showCloseButton","confirmButtonColor","confirmButtonText","result","isSelected","tableRow","data","TableRow","selected","TableCell","align","src","Bin","alt","Table","stickyHeader","TableHead","TableBody","entries","map","keys","ConnectedScanPage","handleSkuIdChange","currentSku","scannerMode","handleSkuSaveWithId","resetState","returnFocus","textField","current","focus","setAttribute","removeAttribute","handleSwitchToggle","handleSkuSave","skuId","skuList","isScanDisabled","disableButton","length","onClickClear","React","createRef","FormControlLabel","control","Switch","checked","inputRef","ScanPage","saveStocktake","userId","stocks","success","fail","stockArray","e","upc","count","fetch","URL","method","headers","body","JSON","stringify","res","status","Error","err","ConnectedReviewPage","clearState","setFixtureId","onClickSubmit","input","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","onClickSubmitEmployeeId","allowOutsideClick","isLoading","onSuccessSubmission","userid","showValidationMessage","allowEscapeKey","App","basename","exact","path","ReviewPage","FIXTURE_ID","SKU_COUNT_LIST","initialState","localStorage","getItem","parse","rootReducer","action","removeItem","setItem","store","createStore","ReactDOM","render","document","getElementById","process","href","origin","addEventListener","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2357c01c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/delete.fbc4bf14.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default class HeaderBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: props.title\n    };\n  }\n\n  render() {\n    return (\n      <AppBar position=\"static\" color=\"secondary\">\n        <Toolbar>\n          <Typography variant=\"h6\" style={{ fontWeight: \"bold\" }}>\n            {this.state.title}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n","export const ADD_SKUS = \"ADD_SKUS\";\nexport const SCAN_FIXTURE = \"SCAN_FIXTURE\";\n","import * as ACTION_CONSTANTS from \"./Constants\";\n\nexport function scanSkus(payload) {\n  return { type: ACTION_CONSTANTS.ADD_SKUS, payload };\n}\n\nexport function setFixture(payload) {\n  return { type: ACTION_CONSTANTS.SCAN_FIXTURE, payload };\n}\n","import React, { Component } from \"react\";\nimport HeaderBar from \"../CommonComponents/HeaderBar.js\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setFixture } from \"../StateManagement/Actions\";\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setFixture: fixtureId => dispatch(setFixture(fixtureId))\n  };\n}\n\nclass ConnectedHeaderPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { fixtureId: null };\n  }\n\n  handleFixtureIdChange = event =>\n    this.setState({ fixtureId: event.target.value });\n  handleSubmit = event => {\n    const { fixtureId } = this.state;\n    this.props.setFixture({ fixtureId });\n  };\n  isButtonDisabled = () => !this.state.fixtureId;\n\n  render() {\n    return (\n      <div>\n        <HeaderBar title=\"Inventory Control\" />\n        <div className=\"flex flex-column ma3\">\n          <TextField\n            autoFocus\n            id=\"outlined-name\"\n            label=\"Fixture ID\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            onChange={this.handleFixtureIdChange}\n          />\n          <Link to=\"/start\" className=\"noLink\">\n            <Button\n              disabled={this.isButtonDisabled()}\n              className=\"w-100\"\n              fullWidth={true}\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={this.handleSubmit}\n            >\n              Proceed\n            </Button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\nconst HeaderPage = connect(null, mapDispatchToProps)(ConnectedHeaderPage);\n\nexport default HeaderPage;\n","import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport HeaderBar from \"../CommonComponents/HeaderBar.js\";\n\nconst mapStateToProps = state => {\n  return { fixtureId: state.fixtureId };\n};\n\nclass ConnectedCountStartPage extends Component {\n  render() {\n    if (!this.props.fixtureId) {\n      return <Redirect push to=\"/\" />;\n    }\n\n    return (\n      <div>\n        <HeaderBar title=\"Inventory Control\" />\n        <div className=\"ma2\">\n          <span className=\"f4 mr2\">FIXTURE ID:</span>\n          <span className=\"underline f4\">{this.props.fixtureId}</span>\n        </div>\n        <div className=\"flex flex-column ma3\">\n          <Link to=\"/scan\" className=\"noLink\">\n            <Button\n              style={{ width: \"100%\", marginBottom: 10 }}\n              variant=\"contained\"\n              color=\"secondary\"\n            >\n              Start Scanning\n            </Button>\n          </Link>\n          <Link to=\"/\" className=\"noLink\">\n            <Button className=\"w-100\" variant=\"contained\" color=\"secondary\">\n              Back to Home\n            </Button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst CountStartPage = connect(mapStateToProps)(ConnectedCountStartPage);\nexport default CountStartPage;\n","import React, { Component } from \"react\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Table from \"@material-ui/core/Table\";\nimport Bin from \"../Img/delete.svg\";\nimport Swal from \"sweetalert2\";\n\nexport class EditableTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedKey: null\n    };\n  }\n\n  onCountChange = (tuple, valChange) => {\n    let list = Object.assign({}, this.props.skuCountList);\n    list[tuple[0]] = tuple[1] + valChange;\n    this.props.setSkuCountList({ skuCountList: list });\n  };\n\n  onRemoveSku = key => {\n    let list = Object.assign({}, this.props.skuCountList);\n    delete list[key];\n    this.props.setSkuCountList({ skuCountList: list });\n    // Overwrite the setting of selectedKey from TableRow onClick\n    setTimeout(() => this.setState({ selectedKey: null }), 50);\n  };\n\n  onClickDelete = (key) => {\n    Swal.fire({\n      title: \"Delete?\",\n      text: \"SKU \" + key,\n      icon: \"warning\",\n      showCloseButton: true,\n      confirmButtonColor: \"#3085d6\",\n      confirmButtonText: \"Confirm\"\n    }).then(result => {\n      if (result.value) {\n        this.onRemoveSku(key);\n      }\n    });\n  }\n\n  isSelected = key => key === this.state.selectedKey;\n\n  tableRow = data => {\n    return (\n      <TableRow\n        key={data[0]}\n        selected={this.isSelected(data[0])}\n        onClick={() => {\n          this.setState({ selectedKey: data[0] });\n        }}\n      >\n        <TableCell align=\"center\">{data[0]}</TableCell>\n        <TableCell align=\"center\">\n          <div className=\"flex justify-between items-center\">\n            <div className=\"\"></div>\n            <div className=\"flex items-center\">\n              <button\n                className={\n                  \"b--none bg-transparent f3 mr2\" +\n                  (this.isSelected(data[0]) ? \"\" : \" hidden\")\n                }\n                onClick={() => this.onCountChange(data, 1)}\n              >\n                +\n              </button>\n              <span>{data[1]}</span>\n              <button\n                className={\n                  \"b--none bg-transparent f3 ml2\" +\n                  (this.isSelected(data[0]) && data[1] > 1 ? \"\" : \" hidden\")\n                }\n                onClick={() => this.onCountChange(data, -1)}\n              >\n                -\n              </button>\n            </div>\n            <div className=\"flex items-center\">\n              <input\n                type=\"image\"\n                src={Bin}\n                alt=\"bin\"\n                onClick={() => this.onClickDelete(data[0])}\n                className={\n                  \"h1 w-auto\" + (this.isSelected(data[0]) ? \"\" : \" hidden\")\n                }\n              />\n            </div>\n          </div>\n        </TableCell>\n      </TableRow>\n    );\n  };\n\n  render() {\n    return (\n      <Table stickyHeader>\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\">\n              <span className=\"f5 b\">SKU ID</span>\n            </TableCell>\n            <TableCell align=\"center\">\n              <span className=\"f5 b\">Count</span>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {Object.entries(this.props.skuCountList).map(keys =>\n            this.tableRow(keys)\n          )}\n        </TableBody>\n      </Table>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport HeaderBar from \"../CommonComponents/HeaderBar.js\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { Redirect } from \"react-router\";\nimport { scanSkus } from \"../StateManagement/Actions\";\nimport Swal from \"sweetalert2\";\nimport { EditableTable } from \"../ReviewPage/EditableTable\";\n\nconst mapStateToProps = state => {\n  return { fixtureId: state.fixtureId, skuCountList: state.skuCountList };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setSkuCountList: skuCountList => dispatch(scanSkus(skuCountList))\n  };\n}\n\nexport class ConnectedScanPage extends Component {\n  constructor(props) {\n    super(props);\n    this.textField = React.createRef();\n    this.state = {\n      currentSku: \"\",\n      scannerMode: true\n    };\n  }\n\n  handleSkuIdChange = event => {\n    this.setState({\n      currentSku: event.target.value\n    });\n    if (this.state.scannerMode) {\n      this.handleSkuSaveWithId(event.target.value);\n    }\n  };\n\n  resetState = () => {\n    this.setState({\n      currentSku: \"\"\n    });\n    this.props.setSkuCountList({ skuCountList: {} });\n    this.returnFocus();\n  };\n\n  returnFocus = () => {\n    if (this.textField.current == null) return;\n    this.textField.current.focus();\n    if (this.state.scannerMode) {\n      // Hide virtual keyboard\n      this.textField.current.setAttribute(\"readonly\", true);\n      setTimeout(() => {\n        this.textField.current.removeAttribute(\"readonly\");\n      }, 100);\n    }\n  };\n\n  handleSwitchToggle = () => {\n    this.setState(\n      {\n        scannerMode: !this.state.scannerMode\n      },\n      this.returnFocus\n    );\n  };\n\n  handleSkuSave = () => {\n    this.handleSkuSaveWithId(this.state.currentSku);\n  };\n\n  handleSkuSaveWithId = skuId => {\n    let skuList = Object.assign({}, this.props.skuCountList);\n    if (skuList[skuId]) {\n      skuList[skuId] = skuList[skuId] + 1;\n    } else if (skuId) {\n      skuList[skuId] = 1;\n    }\n    this.setState({ currentSku: \"\" });\n    this.props.setSkuCountList({ skuCountList: skuList });\n    this.returnFocus();\n  };\n\n  isScanDisabled = () => this.state.scannerMode || !this.state.currentSku;\n\n  disableButton = () =>\n    !this.props.skuCountList ||\n    Object.entries(this.props.skuCountList).length === 0;\n\n  onClickClear = () => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCloseButton: true,\n      confirmButtonColor: \"#3085d6\",\n      confirmButtonText: \"Yes, clear it!\"\n    }).then(result => {\n      if (result.value) {\n        this.resetState();\n      }\n    });\n  };\n\n  componentDidMount() {\n    this.returnFocus();\n  }\n\n  render() {\n    if (!this.props.fixtureId) {\n      return <Redirect push to=\"/\" />;\n    }\n    return (\n      <div>\n        <HeaderBar title=\"Inventory Control\" />\n        <div className=\"flex flex-column ma3\">\n          <div className=\"flex justify-between\">\n            <div className=\"ma2\">\n              <span className=\"f4 mr2\">FIXTURE ID:</span>\n              <span className=\"underline f4\">{this.props.fixtureId}</span>\n            </div>\n            <FormControlLabel\n              control={\n                <Switch\n                  onChange={this.handleSwitchToggle}\n                  checked={this.state.scannerMode}\n                />\n              }\n              label=\"Scanner Mode\"\n            />\n          </div>\n          <TextField\n            id=\"outlined-name\"\n            label=\"CSKU ID\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            autoFocus\n            inputRef={this.textField}\n            value={this.state.currentSku}\n            onChange={this.handleSkuIdChange}\n            onClick={this.returnFocus}\n          />\n          <div className=\"flex flex-column\">\n            <Button\n              style={{ width: \"100%\", marginBottom: 20 }}\n              variant=\"contained\"\n              color=\"secondary\"\n              disabled={this.isScanDisabled()}\n              onClick={this.handleSkuSave}\n            >\n              Enter\n            </Button>\n            <Button\n              style={{ width: \"100%\", marginBottom: 10 }}\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={this.onClickClear}\n            >\n              Clear\n            </Button>\n            <Link to=\"/review\" className=\"noLink\">\n              <Button\n                style={{ width: \"100%\", marginBottom: 10 }}\n                disabled={this.disableButton()}\n                variant=\"contained\"\n                color=\"primary\"\n              >\n                Review\n              </Button>\n            </Link>\n          </div>\n          <EditableTable\n            skuCountList={this.props.skuCountList}\n            setSkuCountList={this.props.setSkuCountList}\n          />\n        </div>\n      </div>\n    );\n  }\n}\nconst ScanPage = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConnectedScanPage);\nexport default ScanPage;\n","const URL = \"http://3.134.88.218:3001/\";\nconst POST_SUBMISSION = URL + \"submission\";\n\nexport const saveStocktake = (userId, fixtureId, stocks, success, fail) => {\n  let stockArray = [];\n  for (let e of Object.entries(stocks)) {\n    stockArray.push({ upc: e[0], count: e[1] });\n  }\n\n  return fetch(POST_SUBMISSION, {\n    method: \"post\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      fixtureId: fixtureId,\n      userId: userId,\n      stocks: stockArray\n    })\n  })\n    .then(res => {\n      if (res.status === 200) {\n        success();\n        return null;\n      }\n      return res.text();\n    })\n    .then(text => {\n      if (text !== null) {\n        throw new Error(text);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n      fail(err);\n    });\n};\n","import React, { Component } from \"react\";\nimport HeaderBar from \"../CommonComponents/HeaderBar.js\";\nimport Button from \"@material-ui/core/Button\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { setFixture, scanSkus } from \"../StateManagement/Actions\";\nimport { EditableTable } from \"./EditableTable\";\nimport { saveStocktake } from \"../ControllerInteface/ApiCaller\";\nimport Swal from \"sweetalert2\";\n\nconst mapStateToProps = state => {\n  return {\n    fixtureId: state.fixtureId,\n    skuCountList: state.skuCountList\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setSkuCountList: skuCountList => dispatch(scanSkus(skuCountList)),\n    setFixtureId: fixtureId => dispatch(setFixture(fixtureId))\n  };\n};\n\nexport class ConnectedReviewPage extends Component {\n  clearState = () => {\n    this.props.setSkuCountList({ skuCountList: {} });\n    this.props.setFixtureId({ fixtureId: null });\n  };\n\n  // First popup for submission confirmation\n  onClickSubmit = () => {\n    Swal.fire({\n      title: \"Submission\",\n      text: \"Enter your employee ID\",\n      input: \"text\",\n      inputAttributes: {\n        autocapitalize: \"off\"\n      },\n      showCloseButton: true,\n      confirmButtonText: \"Confirm\",\n      showLoaderOnConfirm: true,\n      preConfirm: this.onClickSubmitEmployeeId,\n      allowOutsideClick: () => !Swal.isLoading()\n    }).then(result => {\n      if (result.value) {\n        this.onSuccessSubmission();\n      }\n    });\n  };\n\n  onClickSubmitEmployeeId = userid => {\n    let { fixtureId, skuCountList } = this.props;\n    return saveStocktake(\n      userid,\n      fixtureId,\n      skuCountList,\n      () => {},\n      err => Swal.showValidationMessage(`${err}`)\n    );\n  };\n\n  onSuccessSubmission = () => {\n    Swal.fire({\n      title: \"Successful!\",\n      text: \"The records has been submitted.\",\n      icon: \"success\",\n      confirmButtonColor: \"#3085d6\",\n      confirmButtonText: \"Start New Count\",\n      allowOutsideClick: false,\n      allowEscapeKey: false\n    }).then(result => {\n      if (result.value) {\n        // Link to count start page by clearing all scanned records\n        this.clearState();\n      }\n    });\n  };\n\n  disableButton = () =>\n    !this.props.skuCountList ||\n    Object.entries(this.props.skuCountList).length === 0;\n\n  render() {\n    if (!this.props.fixtureId) {\n      return <Redirect push to=\"/\" />;\n    }\n    return (\n      <div>\n        <HeaderBar title=\"Inventory Control\" />\n        <div className=\"flex flex-column ma3\">\n          <div className=\"flex ma2\">\n            <span className=\"f4 mr2\">FIXTURE ID:</span>\n            <span className=\"underline f4\">{this.props.fixtureId}</span>\n          </div>\n          <div>\n            <EditableTable\n              skuCountList={this.props.skuCountList}\n              setSkuCountList={this.props.setSkuCountList}\n            />\n          </div>\n          <div className=\"flex flex-column\">\n            <Button\n              style={{ width: \"100%\", marginBottom: 10 }}\n              disabled={this.disableButton()}\n              variant=\"contained\"\n              onClick={this.onClickSubmit}\n              color=\"primary\"\n            >\n              Submit\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst ScanPage = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConnectedReviewPage);\nexport default ScanPage;\n","import React from \"react\";\nimport HeaderPage from \"./HeaderPage/HeaderPage.js\";\nimport CountStartPage from \"./CountStartPage/CountStartPage.js\";\nimport ScanPage from \"./ScanPage/ScanPage.js\";\nimport ReviewPage from \"./ReviewPage/ReviewPage\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router basename=\"/inventory-control\">\n      <div>\n        <Route exact path=\"/\">\n          <HeaderPage />\n        </Route>\n        <Route exact path=\"/start\">\n          <CountStartPage />\n        </Route>\n        <Route exact path=\"/scan\">\n          <ScanPage />\n        </Route>\n        <Route exact path=\"/review\">\n          <ReviewPage />\n        </Route>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","export const FIXTURE_ID = \"fixtureId\";\nexport const SKU_COUNT_LIST = \"skuCountList\";\n","import * as ACTION_CONSTANTS from \"./Constants\";\nimport { FIXTURE_ID, SKU_COUNT_LIST } from \"../LocalStorage\";\n\nconst initialState = {\n  fixtureId: localStorage.getItem(FIXTURE_ID),\n  skuCountList:\n    localStorage.getItem(SKU_COUNT_LIST) === null\n      ? {}\n      : JSON.parse(localStorage.getItem(SKU_COUNT_LIST))\n};\nfunction rootReducer(state = initialState, action) {\n  if (action.type === ACTION_CONSTANTS.ADD_SKUS) {\n    if (Object.entries(action.payload.skuCountList).length === 0) {\n      localStorage.removeItem(SKU_COUNT_LIST);\n    } else {\n      localStorage.setItem(\n        SKU_COUNT_LIST,\n        JSON.stringify(action.payload.skuCountList)\n      );\n    }\n    return Object.assign({}, state, {\n      skuCountList: action.payload.skuCountList\n    });\n  } else if (action.type === ACTION_CONSTANTS.SCAN_FIXTURE) {\n    if (action.payload.fixtureId === null) {\n      localStorage.removeItem(FIXTURE_ID);\n    } else {\n      localStorage.setItem(FIXTURE_ID, action.payload.fixtureId);\n    }\n    return Object.assign({}, state, {\n      fixtureId: action.payload.fixtureId\n    });\n  }\n  return state;\n}\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"./Reducer.js\";\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./StateManagement/Store.js\";\nimport \"tachyons\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}